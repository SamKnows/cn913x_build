From 5ab9e606f722b416917ed825dadb4a2e68ebce22 Mon Sep 17 00:00:00 2001
From: Alvaro Karsz <alvaro.karsz@solid-run.com>
Date: Wed, 2 Nov 2022 14:00:25 +0200
Subject: [PATCH] Modify MUSDK structs to match SDK11.22.07 MUSDK

Signed-off-by: Alvaro Karsz <alvaro.karsz@solid-run.com>
---
 drivers/net/mvpp2/mrvl_qos.c |  8 ++++----
 drivers/net/mvpp2/mrvl_tm.c  | 24 ++++++++++++------------
 2 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/drivers/net/mvpp2/mrvl_qos.c b/drivers/net/mvpp2/mrvl_qos.c
index 7fd970309e..f06700be5d 100644
--- a/drivers/net/mvpp2/mrvl_qos.c
+++ b/drivers/net/mvpp2/mrvl_qos.c
@@ -863,9 +863,9 @@ mrvl_configure_txqs(struct mrvl_priv *priv, uint16_t portid,
 	if (mrvl_qos_cfg == NULL)
 		return 0;
 
-	priv->ppio_params.rate_limit_enable = port_cfg->rate_limit_enable;
+	priv->ppio_params.rate_limit.rate_limit_enable = port_cfg->rate_limit_enable;
 	if (port_cfg->rate_limit_enable)
-		priv->ppio_params.rate_limit_params =
+		priv->ppio_params.rate_limit.rate_limit_params =
 			port_cfg->rate_limit_params;
 
 	for (i = 0; i < max_queues; i++) {
@@ -874,8 +874,8 @@ mrvl_configure_txqs(struct mrvl_priv *priv, uint16_t portid,
 
 		params->sched_mode = port_cfg->outq[i].sched_mode;
 		params->weight = port_cfg->outq[i].weight;
-		params->rate_limit_enable = port_cfg->outq[i].rate_limit_enable;
-		params->rate_limit_params = port_cfg->outq[i].rate_limit_params;
+		params->rate_limit.rate_limit_enable = port_cfg->outq[i].rate_limit_enable;
+		params->rate_limit.rate_limit_params = port_cfg->outq[i].rate_limit_params;
 	}
 
 	return 0;
diff --git a/drivers/net/mvpp2/mrvl_tm.c b/drivers/net/mvpp2/mrvl_tm.c
index e98f576cfa..a3150328d9 100644
--- a/drivers/net/mvpp2/mrvl_tm.c
+++ b/drivers/net/mvpp2/mrvl_tm.c
@@ -820,10 +820,10 @@ mrvl_hierarchy_commit(struct rte_eth_dev *dev, int clear_on_fail,
 			if (!node->profile)
 				continue;
 
-			priv->ppio_params.rate_limit_enable = 1;
-			priv->ppio_params.rate_limit_params.cir =
+			priv->ppio_params.rate_limit.rate_limit_enable = 1;
+			priv->ppio_params.rate_limit.rate_limit_params.cir =
 				node->profile->params.peak.rate * 8 / 1000;
-			priv->ppio_params.rate_limit_params.cbs =
+			priv->ppio_params.rate_limit.rate_limit_params.cbs =
 				node->profile->params.peak.size / 1000;
 
 			MRVL_LOG(INFO,
@@ -850,17 +850,17 @@ mrvl_hierarchy_commit(struct rte_eth_dev *dev, int clear_on_fail,
 		}
 
 		if (node->profile) {
-			p->rate_limit_enable = 1;
+			p->rate_limit.rate_limit_enable = 1;
 			/* convert Bytes/s to kilo bits/s */
-			p->rate_limit_params.cir =
+			p->rate_limit.rate_limit_params.cir =
 				node->profile->params.peak.rate * 8 / 1000;
 			/* convert bits to kilo bits */
-			p->rate_limit_params.cbs =
+			p->rate_limit.rate_limit_params.cbs =
 				node->profile->params.peak.size / 1000;
 		} else {
-			p->rate_limit_enable = 0;
-			p->rate_limit_params.cir = 0;
-			p->rate_limit_params.cbs = 0;
+			p->rate_limit.rate_limit_enable = 0;
+			p->rate_limit.rate_limit_params.cir = 0;
+			p->rate_limit.rate_limit_params.cbs = 0;
 		}
 	}
 
@@ -874,9 +874,9 @@ mrvl_hierarchy_commit(struct rte_eth_dev *dev, int clear_on_fail,
 
 			p->sched_mode = PP2_PPIO_SCHED_M_WRR;
 			p->weight = 0;
-			p->rate_limit_enable = 0;
-			p->rate_limit_params.cir = 0;
-			p->rate_limit_params.cbs = 0;
+			p->rate_limit.rate_limit_enable = 0;
+			p->rate_limit.rate_limit_params.cir = 0;
+			p->rate_limit.rate_limit_params.cbs = 0;
 		}
 	}
 
-- 
2.32.0

